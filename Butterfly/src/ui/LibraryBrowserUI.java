package ui;

import butterfly.IAudioController;
import butterfly.LibraryBrowser;
import javax.swing.JTree;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author natec
 */
public class LibraryBrowserUI extends javax.swing.JPanel implements IAudioUI
{
    private LibraryBrowser controller;

    /**
     * Creates new form LibraryBrowser
     */
    public LibraryBrowserUI() {
        initComponents();
        initTree();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TreeScollPane = new javax.swing.JScrollPane();
        LibraryTree = new javax.swing.JTree();

        LibraryTree.setBackground(new java.awt.Color(51, 51, 51));
        LibraryTree.setForeground(new java.awt.Color(255, 255, 255));
        LibraryTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LibraryTreeMousePressed(evt);
            }
        });
        TreeScollPane.setViewportView(LibraryTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TreeScollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TreeScollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void LibraryTreeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LibraryTreeMousePressed
        if (SwingUtilities.isLeftMouseButton(evt) && evt.getClickCount() == 1)
            this.controller.displaySelection(evt.getX(), evt.getY());
        else if (SwingUtilities.isRightMouseButton(evt))
        {
            this.controller.rightClick(evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_LibraryTreeMousePressed

    public JTree getTree()
    {
        return this.LibraryTree;
    }
    
    @Override
    public void setController(IAudioController controller) {
        this.controller = (LibraryBrowser) controller;
    }
    
    private void initTree()
    {
        DefaultTreeModel model = (DefaultTreeModel)this.LibraryTree.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode)model.getRoot();
        root.removeAllChildren();
        root.setUserObject("Library");
        model.reload(root);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTree LibraryTree;
    private javax.swing.JScrollPane TreeScollPane;
    // End of variables declaration//GEN-END:variables
}
